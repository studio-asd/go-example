rules:
- id: anonymous-race-condition
  patterns:
    - pattern-either: 
      - pattern: |
          for $Y, $X := range ... {
            ...
            go func(...){
              ...
              $FOO(..., $X, ...)
              ...
            }(...)
            ...
          }
      - pattern: |
          for $X:=...;$Y;$Z {
            ...
            go func(...) {
              ...
              $FOO(..., $X,...)
              ...
            }(...)
            ...
          }
    - pattern-not: |
        for $X, $Y := range ... {
          ...
          go func(..., $V, ...){
            ...
            $FOO(..., $V, ...)
            ...
          }(..., $Y, ...)
          ...
        }
    - pattern-not: |
        for $X:=...;$Y;$Z {
          ...
          go func(..., $V, ...) {
            ...
            $FOO(..., $V,...)
            ...
          }(..., $X, ...)
          ...
        }
    - pattern-not: |
        for $X, $Y := range ... {
          ...
          $COPY := $Y
          ...
          go func(...){
            ...
            $FOO(..., $COPY, ...)
            ...
          }(...)
          ...
        }
    - pattern-not: |
        for $X:=...;$Y;$Z {
          ...
          $COPY := $X
          ...
          go func(...) {
            ...
            $FOO(..., $COPY,...)
            ...
          }(...)
          ...
        }
  message: |
    Possible race condition due to memory aliasing of variable `$X`
  severity: ERROR
  languages: [go]