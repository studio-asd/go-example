# DO NOT EDIT. This file is generated via ./database/sqlc.yaml template.
#
# Please re-generate this file using the shell script.

version: "2"
sql:
  - schema: "schema.sql"
    queries: "query.sql"
    engine: "postgresql"
    gen:
      go:
        package: "postgres"
        # The database internal package is always placed under the '/[service_name]/postgres'.
        out: "../../services/wallet/internal/postgres"
        sql_package: "pgx/v5"
        output_db_file_name: "sqlc.go"
        output_models_file_name: "types.sql.go"
        # Almost of the overrides rules are taken from Brandur's article on how he is moving from pgxV4 to pgxV5.
        # (https://brandur.org/fragments/pgx-v5-sqlc-upgrade).
        #
        # To overrides the sqlc types and go types, please look at https://github.com/sqlc-dev/sqlc/blob/main/internal/codegen/golang/postgresql_type.go#L1.
        overrides:
          - db_type: "pg_catalog.bool"
            go_type: "database/sql.NullBool"
            nullable: true
          - db_type: "pg_catalog.float8"
            go_type: "database/sql.NullFloat64"
            nullable: true
          - db_type: "pg_catalog.int4"
            go_type: "database/sql.NullInt32"
            nullable: true
          - db_type: "pg_catalog.int8"
            go_type: "database/sql.NullInt64"
            nullable: true
          - db_type: "pg_catalog.varchar"
            go_type: "database/sql.NullString"
            nullable: true
          - db_type: "text"
            go_type: "database/sql.NullString"
            nullable: true
          - db_type: "uuid"
            go_type: "github.com/google/uuid.UUID"
          - db_type: "uuid"
            go_type: "github.com/google/uuid.NullUUID"
            nullable: true
          - db_type: "pg_catalog.interval"
            go_type: "time.Duration"
          - db_type: "pg_catalog.interval"
            # It seems like this could be the simpler `go_type: "*time.Duration"`, but
            # that outputs double points like `**time.Duration` for reasons that are
            # beyond me (bug?). The expanded version of `go_type` usage below works.
            go_type:
              import: "time"
              type: "Duration"
              pointer: true
            nullable: true
          # Below we have configurations both for non 'pg_catalog' and the 'pg_catalog' itself.
          # This is because the emitted types and query is using two different 'db_type'. To ensure
          # the generated types and query is using the same type, we will override them both.
          #
          # We convert the pgtype.Timestamptz to time.Time because it is more convenient to work on
          # the basic go types.
          - db_type: "numeric"
            go_type:
              import: "github.com/shopspring/decimal"
              type: "Decimal"
          - db_type: "pg_catalog.numeric"
            go_type:
              import: "github.com/shopspring/decimal"
              type: "Decimal"
          - db_type: "timestamptz"
            go_type:
              import: "time"
              type: "Time"
          - db_type: "timestamptz"
            go_type:
              import: "database/sql"
              type: "NullTime"
            nullable: true
          - db_type: "pg_catalog.timestamptz"
            go_type:
              import: "time"
              type: "Time"
          - db_type: "pg_catalog.timestamptz"
            go_type:
              import: "database/sql"
              type: "NullTime"
            nullable: true
          - db_type: "timestamp"
            go_type:
              import: "time"
              type: "Time"
          - db_type: "timestamp"
            go_type:
              import: "database/sql"
              type: "NullTime"
            nullable: true
          - db_type: "pg_catalog.timestamp"
            go_type:
              import: "time"
              type: "Time"
          - db_type: "pg_catalog.timestamp"
            go_type:
              import: "database/sql"
              type: "NullTime"
            nullable: true
    database:
      uri: "postgres://postgres:postgres@localhost:5432/go_example?sslmode=disable"
    rules:
      - sqlc/db-prepare
