// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: api/wallet/v1/wallet.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionType int32

const (
	TransactionType_TX_TYPE_UNSPECIFIED        TransactionType = 0
	TransactionType_TX_TYPE_DEPOSIT            TransactionType = 1
	TransactionType_TX_TYPE_TRANSFER           TransactionType = 20
	TransactionType_TX_TYPE_WITHDRAWAL         TransactionType = 50
	TransactionType_TX_TYPE_CHARGEBACK         TransactionType = 1000
	TransactionType_TX_TYPE_CHARGEBACK_PAYMENT TransactionType = 1001
	TransactionType_TX_TYPE_REVERSAL           TransactionType = 5000
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0:    "TX_TYPE_UNSPECIFIED",
		1:    "TX_TYPE_DEPOSIT",
		20:   "TX_TYPE_TRANSFER",
		50:   "TX_TYPE_WITHDRAWAL",
		1000: "TX_TYPE_CHARGEBACK",
		1001: "TX_TYPE_CHARGEBACK_PAYMENT",
		5000: "TX_TYPE_REVERSAL",
	}
	TransactionType_value = map[string]int32{
		"TX_TYPE_UNSPECIFIED":        0,
		"TX_TYPE_DEPOSIT":            1,
		"TX_TYPE_TRANSFER":           20,
		"TX_TYPE_WITHDRAWAL":         50,
		"TX_TYPE_CHARGEBACK":         1000,
		"TX_TYPE_CHARGEBACK_PAYMENT": 1001,
		"TX_TYPE_REVERSAL":           5000,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[0].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[0]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{0}
}

type WalletUser int32

const (
	WalletUser_WALLET_USER_UNSPECIFIED WalletUser = 0
	WalletUser_WALLET_USER_SYSTEM      WalletUser = 1
	WalletUser_WALLET_USER_USER        WalletUser = 50
	WalletUser_WALLET_USER_INSTITUTION WalletUser = 100
)

// Enum value maps for WalletUser.
var (
	WalletUser_name = map[int32]string{
		0:   "WALLET_USER_UNSPECIFIED",
		1:   "WALLET_USER_SYSTEM",
		50:  "WALLET_USER_USER",
		100: "WALLET_USER_INSTITUTION",
	}
	WalletUser_value = map[string]int32{
		"WALLET_USER_UNSPECIFIED": 0,
		"WALLET_USER_SYSTEM":      1,
		"WALLET_USER_USER":        50,
		"WALLET_USER_INSTITUTION": 100,
	}
)

func (x WalletUser) Enum() *WalletUser {
	p := new(WalletUser)
	*p = x
	return p
}

func (x WalletUser) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletUser) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[1].Descriptor()
}

func (WalletUser) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[1]
}

func (x WalletUser) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletUser.Descriptor instead.
func (WalletUser) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{1}
}

type WalletOwner int32

const (
	WalletOwner_WALLET_OWNER_UNSPECIFIED WalletOwner = 0
	WalletOwner_WALLET_OWNER_SYSTEM      WalletOwner = 1
	WalletOwner_WALLET_OWNER_USER        WalletOwner = 50
)

// Enum value maps for WalletOwner.
var (
	WalletOwner_name = map[int32]string{
		0:  "WALLET_OWNER_UNSPECIFIED",
		1:  "WALLET_OWNER_SYSTEM",
		50: "WALLET_OWNER_USER",
	}
	WalletOwner_value = map[string]int32{
		"WALLET_OWNER_UNSPECIFIED": 0,
		"WALLET_OWNER_SYSTEM":      1,
		"WALLET_OWNER_USER":        50,
	}
)

func (x WalletOwner) Enum() *WalletOwner {
	p := new(WalletOwner)
	*p = x
	return p
}

func (x WalletOwner) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletOwner) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[2].Descriptor()
}

func (WalletOwner) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[2]
}

func (x WalletOwner) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletOwner.Descriptor instead.
func (WalletOwner) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{2}
}

type WalletType int32

const (
	WalletType_WALLET_TYPE_UNSPECIFIED WalletType = 0
	// WALLET_TYPE_INTERMEDIARY is the intermediary wallet and used when we need a transition of status in a transaction.
	// For example, withdrawal is not immediately success because we need to wait until the withdrawal is a success in the
	// third party system. In this case, the money is kept in the user's intermediary wallet.
	WalletType_WALLET_TYPE_INTERMEDIARY WalletType = 1
	// WALLET_TYPE_MAIN is the main wallet of the user. Money comes and goes mainly from this wallet.
	WalletType_WALLET_TYPE_MAIN    WalletType = 10
	WalletType_WALLET_TYPE_SAVINGS WalletType = 20
	// WALLET_TYPE_CHARGEBACK is the wallet of user's when the system need to do a chargeback to the user. The chargeback
	// is being done because the system cannot deduct user's wallet as the money inside the user's wallet is not enough.
	//
	// This type of wallet is especially useful in payment reversal when we user's wallet cannot goes to negative.
	WalletType_WALLET_TYE_CHARGEBACK WalletType = 1000
	// WALLET_TYPE_DEPOSIT is used to move money in from oustide of the system to the wallet system. For example transfer
	// from a Payment Gateway to the wallet ecosystem.
	WalletType_WALLET_TYPE_DEPOSIT WalletType = 10000
	// WALLET_TYPE_WITHDRAWAL is used to move money to outside of the wallet system. For example transfer to a Payment Gateway.
	WalletType_WALLET_TYPE_WITHDRAWAL WalletType = 10001
)

// Enum value maps for WalletType.
var (
	WalletType_name = map[int32]string{
		0:     "WALLET_TYPE_UNSPECIFIED",
		1:     "WALLET_TYPE_INTERMEDIARY",
		10:    "WALLET_TYPE_MAIN",
		20:    "WALLET_TYPE_SAVINGS",
		1000:  "WALLET_TYE_CHARGEBACK",
		10000: "WALLET_TYPE_DEPOSIT",
		10001: "WALLET_TYPE_WITHDRAWAL",
	}
	WalletType_value = map[string]int32{
		"WALLET_TYPE_UNSPECIFIED":  0,
		"WALLET_TYPE_INTERMEDIARY": 1,
		"WALLET_TYPE_MAIN":         10,
		"WALLET_TYPE_SAVINGS":      20,
		"WALLET_TYE_CHARGEBACK":    1000,
		"WALLET_TYPE_DEPOSIT":      10000,
		"WALLET_TYPE_WITHDRAWAL":   10001,
	}
)

func (x WalletType) Enum() *WalletType {
	p := new(WalletType)
	*p = x
	return p
}

func (x WalletType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[3].Descriptor()
}

func (WalletType) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[3]
}

func (x WalletType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletType.Descriptor instead.
func (WalletType) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{3}
}

type WalletStatus int32

const (
	WalletStatus_WALLET_STATUS_UNSPECIFIED WalletStatus = 0
	WalletStatus_WALLET_STATUS_ACTIVE      WalletStatus = 1
	WalletStatus_WALLET_STATUS_INACTIVE    WalletStatus = 30
	WalletStatus_WALLET_STATUS_SUSPENDED   WalletStatus = 50
)

// Enum value maps for WalletStatus.
var (
	WalletStatus_name = map[int32]string{
		0:  "WALLET_STATUS_UNSPECIFIED",
		1:  "WALLET_STATUS_ACTIVE",
		30: "WALLET_STATUS_INACTIVE",
		50: "WALLET_STATUS_SUSPENDED",
	}
	WalletStatus_value = map[string]int32{
		"WALLET_STATUS_UNSPECIFIED": 0,
		"WALLET_STATUS_ACTIVE":      1,
		"WALLET_STATUS_INACTIVE":    30,
		"WALLET_STATUS_SUSPENDED":   50,
	}
)

func (x WalletStatus) Enum() *WalletStatus {
	p := new(WalletStatus)
	*p = x
	return p
}

func (x WalletStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[4].Descriptor()
}

func (WalletStatus) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[4]
}

func (x WalletStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletStatus.Descriptor instead.
func (WalletStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{4}
}

type DepositStatus int32

const (
	DepositStatus_DEPOSIT_STATUS_UNSPECIFIED DepositStatus = 0
	DepositStatus_DEPOSIT_STATUS_SCUCESS     DepositStatus = 1
	DepositStatus_DEPOSIT_STATUS_CANCELLED   DepositStatus = 40
	DepositStatus_DEPOSIT_STATUS_FAILED      DepositStatus = 50
)

// Enum value maps for DepositStatus.
var (
	DepositStatus_name = map[int32]string{
		0:  "DEPOSIT_STATUS_UNSPECIFIED",
		1:  "DEPOSIT_STATUS_SCUCESS",
		40: "DEPOSIT_STATUS_CANCELLED",
		50: "DEPOSIT_STATUS_FAILED",
	}
	DepositStatus_value = map[string]int32{
		"DEPOSIT_STATUS_UNSPECIFIED": 0,
		"DEPOSIT_STATUS_SCUCESS":     1,
		"DEPOSIT_STATUS_CANCELLED":   40,
		"DEPOSIT_STATUS_FAILED":      50,
	}
)

func (x DepositStatus) Enum() *DepositStatus {
	p := new(DepositStatus)
	*p = x
	return p
}

func (x DepositStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[5].Descriptor()
}

func (DepositStatus) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[5]
}

func (x DepositStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositStatus.Descriptor instead.
func (DepositStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{5}
}

type DepositChannel int32

const (
	DepositChannel_DEPOSIT_CHANNEL_UNSPECIFIED     DepositChannel = 0
	DepositChannel_DEPOSIT_CHANNEL_PAYMENT_GATEWAY DepositChannel = 1
	DepositChannel_DEPOSIT_CHANNEL_BANKS           DepositChannel = 50
	// DEPOSIT_CHANNEL_LOAN_PRODUCT is used when triggering a deposit from a "loan" product.
	DepositChannel_DEPOSIT_CHANNEL_LOAN_PRODUCT DepositChannel = 100
)

// Enum value maps for DepositChannel.
var (
	DepositChannel_name = map[int32]string{
		0:   "DEPOSIT_CHANNEL_UNSPECIFIED",
		1:   "DEPOSIT_CHANNEL_PAYMENT_GATEWAY",
		50:  "DEPOSIT_CHANNEL_BANKS",
		100: "DEPOSIT_CHANNEL_LOAN_PRODUCT",
	}
	DepositChannel_value = map[string]int32{
		"DEPOSIT_CHANNEL_UNSPECIFIED":     0,
		"DEPOSIT_CHANNEL_PAYMENT_GATEWAY": 1,
		"DEPOSIT_CHANNEL_BANKS":           50,
		"DEPOSIT_CHANNEL_LOAN_PRODUCT":    100,
	}
)

func (x DepositChannel) Enum() *DepositChannel {
	p := new(DepositChannel)
	*p = x
	return p
}

func (x DepositChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DepositChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[6].Descriptor()
}

func (DepositChannel) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[6]
}

func (x DepositChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DepositChannel.Descriptor instead.
func (DepositChannel) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{6}
}

type WithdrawalStatus int32

const (
	WithdrawalStatus_WITHDRAWAL_STATUS_UNSPECIFIED WithdrawalStatus = 0
	WithdrawalStatus_WITHDRAWAL_STATUS_SCUCESS     WithdrawalStatus = 1
	WithdrawalStatus_WITHDRAWAL_STATUS_PENDING     WithdrawalStatus = 30
	WithdrawalStatus_WITHDRAWAL_STATUS_CANCELLED   WithdrawalStatus = 40
	WithdrawalStatus_WITHDRAWAL_STATUS_FAILED      WithdrawalStatus = 50
)

// Enum value maps for WithdrawalStatus.
var (
	WithdrawalStatus_name = map[int32]string{
		0:  "WITHDRAWAL_STATUS_UNSPECIFIED",
		1:  "WITHDRAWAL_STATUS_SCUCESS",
		30: "WITHDRAWAL_STATUS_PENDING",
		40: "WITHDRAWAL_STATUS_CANCELLED",
		50: "WITHDRAWAL_STATUS_FAILED",
	}
	WithdrawalStatus_value = map[string]int32{
		"WITHDRAWAL_STATUS_UNSPECIFIED": 0,
		"WITHDRAWAL_STATUS_SCUCESS":     1,
		"WITHDRAWAL_STATUS_PENDING":     30,
		"WITHDRAWAL_STATUS_CANCELLED":   40,
		"WITHDRAWAL_STATUS_FAILED":      50,
	}
)

func (x WithdrawalStatus) Enum() *WithdrawalStatus {
	p := new(WithdrawalStatus)
	*p = x
	return p
}

func (x WithdrawalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[7].Descriptor()
}

func (WithdrawalStatus) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[7]
}

func (x WithdrawalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawalStatus.Descriptor instead.
func (WithdrawalStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{7}
}

type WithdrawalChannel int32

const (
	WithdrawalChannel_CHANNEL_UNSPECIFIED WithdrawalChannel = 0
	WithdrawalChannel_CHANNEL_BANK        WithdrawalChannel = 1
	WithdrawalChannel_CHANNEL_EWALLET     WithdrawalChannel = 2
)

// Enum value maps for WithdrawalChannel.
var (
	WithdrawalChannel_name = map[int32]string{
		0: "CHANNEL_UNSPECIFIED",
		1: "CHANNEL_BANK",
		2: "CHANNEL_EWALLET",
	}
	WithdrawalChannel_value = map[string]int32{
		"CHANNEL_UNSPECIFIED": 0,
		"CHANNEL_BANK":        1,
		"CHANNEL_EWALLET":     2,
	}
)

func (x WithdrawalChannel) Enum() *WithdrawalChannel {
	p := new(WithdrawalChannel)
	*p = x
	return p
}

func (x WithdrawalChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawalChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wallet_v1_wallet_proto_enumTypes[8].Descriptor()
}

func (WithdrawalChannel) Type() protoreflect.EnumType {
	return &file_api_wallet_v1_wallet_proto_enumTypes[8]
}

func (x WithdrawalChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawalChannel.Descriptor instead.
func (WithdrawalChannel) EnumDescriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{8}
}

type CreateWalletAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletType WalletType `protobuf:"varint,1,opt,name=wallet_type,json=walletType,proto3,enum=go_example.api.wallet.v1.WalletType" json:"wallet_type,omitempty"`
	Currency   string     `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	UserId     string     `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateWalletAccountRequest) Reset() {
	*x = CreateWalletAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wallet_v1_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletAccountRequest) ProtoMessage() {}

func (x *CreateWalletAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wallet_v1_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWalletAccountRequest) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNSPECIFIED
}

func (x *CreateWalletAccountRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateWalletAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateWalletAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId     string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	WalletStatus WalletStatus           `protobuf:"varint,2,opt,name=wallet_status,json=walletStatus,proto3,enum=go_example.api.wallet.v1.WalletStatus" json:"wallet_status,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *CreateWalletAccountResponse) Reset() {
	*x = CreateWalletAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wallet_v1_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletAccountResponse) ProtoMessage() {}

func (x *CreateWalletAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_wallet_v1_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateWalletAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWalletAccountResponse) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *CreateWalletAccountResponse) GetWalletStatus() WalletStatus {
	if x != nil {
		return x.WalletStatus
	}
	return WalletStatus_WALLET_STATUS_UNSPECIFIED
}

func (x *CreateWalletAccountResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetWalletBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to FilterParams:
	//
	//	*GetWalletBalanceRequest_WalletId
	//	*GetWalletBalanceRequest_UserId
	FilterParams isGetWalletBalanceRequest_FilterParams `protobuf_oneof:"filter_params"`
}

func (x *GetWalletBalanceRequest) Reset() {
	*x = GetWalletBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wallet_v1_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceRequest) ProtoMessage() {}

func (x *GetWalletBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_wallet_v1_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceRequest) Descriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{2}
}

func (m *GetWalletBalanceRequest) GetFilterParams() isGetWalletBalanceRequest_FilterParams {
	if m != nil {
		return m.FilterParams
	}
	return nil
}

func (x *GetWalletBalanceRequest) GetWalletId() string {
	if x, ok := x.GetFilterParams().(*GetWalletBalanceRequest_WalletId); ok {
		return x.WalletId
	}
	return ""
}

func (x *GetWalletBalanceRequest) GetUserId() string {
	if x, ok := x.GetFilterParams().(*GetWalletBalanceRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

type isGetWalletBalanceRequest_FilterParams interface {
	isGetWalletBalanceRequest_FilterParams()
}

type GetWalletBalanceRequest_WalletId struct {
	WalletId string `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3,oneof"`
}

type GetWalletBalanceRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

func (*GetWalletBalanceRequest_WalletId) isGetWalletBalanceRequest_FilterParams() {}

func (*GetWalletBalanceRequest_UserId) isGetWalletBalanceRequest_FilterParams() {}

type GetWalletBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId      string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	WalletBalance string                 `protobuf:"bytes,2,opt,name=wallet_balance,json=walletBalance,proto3" json:"wallet_balance,omitempty"`
	WalletStatus  WalletStatus           `protobuf:"varint,3,opt,name=wallet_status,json=walletStatus,proto3,enum=go_example.api.wallet.v1.WalletStatus" json:"wallet_status,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetWalletBalanceResponse) Reset() {
	*x = GetWalletBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wallet_v1_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceResponse) ProtoMessage() {}

func (x *GetWalletBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_wallet_v1_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceResponse) Descriptor() ([]byte, []int) {
	return file_api_wallet_v1_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *GetWalletBalanceResponse) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *GetWalletBalanceResponse) GetWalletBalance() string {
	if x != nil {
		return x.WalletBalance
	}
	return ""
}

func (x *GetWalletBalanceResponse) GetWalletStatus() WalletStatus {
	if x != nil {
		return x.WalletStatus
	}
	return WalletStatus_WALLET_STATUS_UNSPECIFIED
}

func (x *GetWalletBalanceResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_api_wallet_v1_wallet_proto protoreflect.FileDescriptor

var file_api_wallet_v1_wallet_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x67, 0x6f,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6f,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6b, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x16, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0xe6, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x2a, 0xbe, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x58, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x54, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x14, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x58,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c,
	0x10, 0x32, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48,
	0x41, 0x52, 0x47, 0x45, 0x42, 0x41, 0x43, 0x4b, 0x10, 0xe8, 0x07, 0x12, 0x1f, 0x0a, 0x1a, 0x54,
	0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x42, 0x41, 0x43,
	0x4b, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0xe9, 0x07, 0x12, 0x15, 0x0a, 0x10,
	0x54, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c,
	0x10, 0x88, 0x27, 0x2a, 0x74, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x32, 0x12, 0x1b, 0x0a, 0x17,
	0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x53, 0x54,
	0x49, 0x54, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x64, 0x2a, 0x5b, 0x0a, 0x0b, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x41, 0x4c, 0x4c,
	0x45, 0x54, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54,
	0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x10, 0x32, 0x2a, 0xc9, 0x01, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x52, 0x59, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4d, 0x41, 0x49, 0x4e, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x14, 0x12,
	0x1a, 0x0a, 0x15, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x45, 0x5f, 0x43, 0x48,
	0x41, 0x52, 0x47, 0x45, 0x42, 0x41, 0x43, 0x4b, 0x10, 0xe8, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x57,
	0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x10, 0x90, 0x4e, 0x12, 0x1b, 0x0a, 0x16, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x10,
	0x91, 0x4e, 0x2a, 0x80, 0x01, 0x0a, 0x0c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x1e, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x41, 0x4c, 0x4c,
	0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e,
	0x44, 0x45, 0x44, 0x10, 0x32, 0x2a, 0x84, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x43, 0x55, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x28, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x32, 0x2a, 0x93, 0x01, 0x0a,
	0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x23, 0x0a, 0x1f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x41, 0x54, 0x45,
	0x57, 0x41, 0x59, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x53, 0x10, 0x32,
	0x12, 0x20, 0x0a, 0x1c, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x4c, 0x4f, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x10, 0x64, 0x2a, 0xb2, 0x01, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x57, 0x49, 0x54, 0x48, 0x44,
	0x52, 0x41, 0x57, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x49,
	0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x43, 0x55, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x49, 0x54,
	0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x1e, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x49, 0x54, 0x48,
	0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x28, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x49, 0x54,
	0x48, 0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x32, 0x2a, 0x53, 0x0a, 0x11, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x13,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c,
	0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x45, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x02, 0x42, 0x36, 0x5a, 0x34,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x2d, 0x61, 0x73, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_wallet_v1_wallet_proto_rawDescOnce sync.Once
	file_api_wallet_v1_wallet_proto_rawDescData = file_api_wallet_v1_wallet_proto_rawDesc
)

func file_api_wallet_v1_wallet_proto_rawDescGZIP() []byte {
	file_api_wallet_v1_wallet_proto_rawDescOnce.Do(func() {
		file_api_wallet_v1_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_wallet_v1_wallet_proto_rawDescData)
	})
	return file_api_wallet_v1_wallet_proto_rawDescData
}

var file_api_wallet_v1_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_api_wallet_v1_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_wallet_v1_wallet_proto_goTypes = []any{
	(TransactionType)(0),                // 0: go_example.api.wallet.v1.TransactionType
	(WalletUser)(0),                     // 1: go_example.api.wallet.v1.WalletUser
	(WalletOwner)(0),                    // 2: go_example.api.wallet.v1.WalletOwner
	(WalletType)(0),                     // 3: go_example.api.wallet.v1.WalletType
	(WalletStatus)(0),                   // 4: go_example.api.wallet.v1.WalletStatus
	(DepositStatus)(0),                  // 5: go_example.api.wallet.v1.DepositStatus
	(DepositChannel)(0),                 // 6: go_example.api.wallet.v1.DepositChannel
	(WithdrawalStatus)(0),               // 7: go_example.api.wallet.v1.WithdrawalStatus
	(WithdrawalChannel)(0),              // 8: go_example.api.wallet.v1.WithdrawalChannel
	(*CreateWalletAccountRequest)(nil),  // 9: go_example.api.wallet.v1.CreateWalletAccountRequest
	(*CreateWalletAccountResponse)(nil), // 10: go_example.api.wallet.v1.CreateWalletAccountResponse
	(*GetWalletBalanceRequest)(nil),     // 11: go_example.api.wallet.v1.GetWalletBalanceRequest
	(*GetWalletBalanceResponse)(nil),    // 12: go_example.api.wallet.v1.GetWalletBalanceResponse
	(*timestamppb.Timestamp)(nil),       // 13: google.protobuf.Timestamp
}
var file_api_wallet_v1_wallet_proto_depIdxs = []int32{
	3,  // 0: go_example.api.wallet.v1.CreateWalletAccountRequest.wallet_type:type_name -> go_example.api.wallet.v1.WalletType
	4,  // 1: go_example.api.wallet.v1.CreateWalletAccountResponse.wallet_status:type_name -> go_example.api.wallet.v1.WalletStatus
	13, // 2: go_example.api.wallet.v1.CreateWalletAccountResponse.created_at:type_name -> google.protobuf.Timestamp
	4,  // 3: go_example.api.wallet.v1.GetWalletBalanceResponse.wallet_status:type_name -> go_example.api.wallet.v1.WalletStatus
	13, // 4: go_example.api.wallet.v1.GetWalletBalanceResponse.updated_at:type_name -> google.protobuf.Timestamp
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_wallet_v1_wallet_proto_init() }
func file_api_wallet_v1_wallet_proto_init() {
	if File_api_wallet_v1_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_wallet_v1_wallet_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWalletAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wallet_v1_wallet_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWalletAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wallet_v1_wallet_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetWalletBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wallet_v1_wallet_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetWalletBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_wallet_v1_wallet_proto_msgTypes[2].OneofWrappers = []any{
		(*GetWalletBalanceRequest_WalletId)(nil),
		(*GetWalletBalanceRequest_UserId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_wallet_v1_wallet_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_wallet_v1_wallet_proto_goTypes,
		DependencyIndexes: file_api_wallet_v1_wallet_proto_depIdxs,
		EnumInfos:         file_api_wallet_v1_wallet_proto_enumTypes,
		MessageInfos:      file_api_wallet_v1_wallet_proto_msgTypes,
	}.Build()
	File_api_wallet_v1_wallet_proto = out.File
	file_api_wallet_v1_wallet_proto_rawDesc = nil
	file_api_wallet_v1_wallet_proto_goTypes = nil
	file_api_wallet_v1_wallet_proto_depIdxs = nil
}
